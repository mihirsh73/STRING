class Solution {
public:
    string intToRoman(int n) {
        int num[] = {1,4,5,9,10,40,50,90,100,400,500,900,1000};
      string sym[]={"I","IV","V","IX","X","XL","L","XC","C","CD","D","CM","M"};
      int i=12;
        string ans;
        while(n>0)
        {
            int div = n/num[i];
            n=n%num[i];
            while(div--)
            {
                ans += sym[i];
            }
            i--;
        }
        return ans;
    }
};
Time Complexity
We are scanning each digit of the number one by one therefore, the time complexity will be O(log10n).
But n cannot be grater than 3999, therefore, the maximum time can be O(log103999) ~= O(3.60) which is constant hence the overall time complexity will be O(1).

Space Complexity
We are using four arrays whose sizes donâ€™t depend on the input size hence the space complexity will be O(1).
 
