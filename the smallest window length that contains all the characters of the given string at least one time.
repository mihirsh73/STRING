Given a string 's'. The task is to find the smallest window length that contains all the characters of the given string at least one time.
For eg. A = aabcbcdbca, then the result would be 4 as of the smallest window will be dbca.
BRUTE FORCE O(N^3)



// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    int findSubString(string str)
    {
        int count=0;
        int count1=0;
        int mp[256]={0};
        for(int i=0; i<str.size(); i++)
        {
            if(mp[str[i]]==0)
            {
                count++;
            }
            mp[str[i]]++;
        }
        int ans =INT_MAX;
        int start=0;
        memset(mp,0,sizeof(mp));
        for(int i=0; i<str.size(); i++)
        {
            if(mp[str[i]]==0)
            {
                count1++;
            }
            mp[str[i]]++;
            if(count1==count)
            {
                while(count1==count)
                {
                    if(ans>i-start+1)
                    {
                        ans=i-start+1;
                        
                    }
                    mp[str[start]]--;
                    if(mp[str[start]]==0)
                    {
                        count1--;
                    }
                    start++;
                }
            }
        }
        if(ans!=INT_MAX)
        {
            return ans;
        }
        return -1;
    }
};

TC O(N) 
SC O(1)  BECAUSE TAKING ONLY ARRAY OF SIZE 256
