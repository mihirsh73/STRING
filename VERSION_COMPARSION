// logic calculate num1 and num2 till (.) and comapre each and every time;

class Solution {
public:
    int compareVersion(string version1, string version2) {
        long long int num1=0;
        long long int nums2=0;
        
        int i=0,j=0;
        while(i<version1.size() || j<version2.size())
        {
            while(i<version1.size() && version1[i]!='.')
            {
                num1 = num1*10+ (version1[i]-'0');
                i++;
            }
            while(j<version2.size() && version2[j]!='.')
            {
                nums2 = nums2*10+ (version2[j]-'0');
                j++;
            }
            cout<<num1<<"   "<<nums2;
            if(num1>nums2) return 1;
            if(nums2>num1) return -1;
            num1=0;
            nums2=0;
            i++;
            j++;
        }
        return 0;
        
        
    }
}; TC O(N) SC O(1)
