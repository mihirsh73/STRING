long long int  atmost(string s, int k)
  {
      if (k < 0) return 0;
    
    	int i = 0, j = 0, cnt = 0;
    	long long int res = 0;
    	int m[26] = {0};
    
    	while (j < s.length ())
    	{
    		
    		if (m[s[j] - 'a'] == 0) cnt++;
    		m[s[j] - 'a']++;
    
    		while (cnt > k)
    		{
    			m[s[i] - 'a']--;
    			if (m[s[i] - 'a'] == 0) cnt--;
    
    			i++;
    		}
    
    		res += (j - i + 1);
    		j++;
    	}
    	return res;
  }
    long long int substrCount (string s, int k) {
      return atmost(s,k)-atmost(s,k-1);                      // (atmost k distinct - atmost k-1 distinct)
    }
